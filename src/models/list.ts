import { Reducer } from "react";import { MockUrl } from "../constants/url";import { getHotList } from "../service/ProjectService";import { Effect } from "./modelsType";export interface IListModelsState {	list:[],	refreshing:boolean}export interface IListModelsType {	namespace:'list';	state:IListModelsState;	effects:{		getList:Effect	};	reducers:{		addList:Reducer<IListModelsState,any>;		changeLoading:Reducer<IListModelsState, any>;		endList:Reducer<IListModelsState, any>	}}const list:IListModelsType = {	namespace:'list',	state:{		list:[],		refreshing:false	},	reducers:{		addList(state, {  payload } ) {			return {				list: [...state.list, ...payload.list],				refreshing: false			}		},		changeLoading(state, { payload }) {			return {				list: [...state.list],				refreshing:payload.value			}		},		endList(state,{type,payload}){			return {				list: [],				refreshing:false			}		}	},	effects:{		/**		 * 说明： 获取我的首页菜单		 * @author zhou		 */		*getList({ payload },{ call, put }){			let url = MockUrl.hotlist			if(payload.id){				url = MockUrl.categorylist			}			const { data } = yield call(getHotList,url);			yield put({				type:'addList',				payload:{					list:data.list				}			})		}	}}export default list